import com.gecko.gradle.plugins.ext.ResourceLoader
import com.gecko.gradle.plugins.ext.FileCollectionLoader
import com.gecko.gradle.plugins.ext.SrcTreeLoader
import com.gecko.gradle.plugins.ext.JarTreeLoader


apply plugin: 'groovy'
apply plugin: 'maven'

group = 'com.gecko'
archivesBaseName = 'gradle-plugins'
project.version = '0.1'

description = "Custom Gradle Plugins"

ext {
   messageToPrint = null
}

dependencies {
   compile gradleApi()
}

repositories {
   mavenCentral()
}


jar {
    baseName=archivesBaseName
}

/* uploadArchives {
   repositories {
      mavenDeployer {
         repository (url: mavenLocal().url)
      }
   }
} */

task wrapper (type: Wrapper) {
   gradleVersion = '3.2'
}

// buildDir = './build'

// there are multiple ways to configure tasks.
// this is one way
task loadFile (type: ResourceLoader) {
   resource = 'resources'
}

// this is another way
task loadFile2 (type: ResourceLoader)
loadFile2 {
   resource = 'resources'
}

task loadFile3 (type: ResourceLoader)
loadFile3 {
   file = new File ('../gradle-plugins')
   //resource = '/Users/hlieu/Repository/git/gradle-plugins/resources'
}

task loadAllFile (type: FileCollectionLoader) {
   fileList = ['resources','build.gradle', '.gitignore']
}

/* task ping (type: Exec) {
   commandLine 'ping', 'www.google.com'
} */

// start and stop tomcat
task startTomcat (type: Exec) {
   workingDir '/Users/hlieu/Servers/tomcat/bin'
   commandLine './startup.sh'
   standardOutput = new ByteArrayOutputStream()
   return standardOutput.toString ()
}

task stopTomcat (type: Exec) {
   workingDir '/Users/hlieu/Servers/tomcat/bin'
   commandLine './shutdown.sh'
   standardOutput = new ByteArrayOutputStream()
   return standardOutput.toString ()
}

task srcTree (type: SrcTreeLoader) {
   srcDir = './buildSrc'
}

task jarTree (type: JarTreeLoader) {
   // this should point to a tar file
   // does not work with jar files
   jar = '/Users/hlieu/Downloads/apache-tomcat-9.0.0.M15-src.tar'
}

task backItUp (type: Copy) {
   // Copy supports multiple from and into
   // here i copy from 1 into 2 dir
   from 'buildSrc/build/libs'

   rename {
      String name ->
         name+ '.bak'
   }

   into 'backup2'
   into 'backup'
}


configurations.all {
   resolutionStrategy.eachDependency {
      DependencyResolveDetails details ->
         if (details.requested.name == 'groovy-all') {
            details.useTarget group: details.requested.group,
                    name = 'groovy',
                    version = details.requested.version
         }
   }
}